@using RecipePlannerApi.Model;
@using RecipePlannerApi.Service;
@using RecipePlannerApi.Dao;
@using RecipePlannerWebApp.LocalServices;
@inject NavigationManager Nav;
@inject UserSessionData currentUser;
@inject IJSRuntime JsRuntime;

<link href="RecipePlannerWebApp.styles.css" rel="stylesheet">

<div class="ingredient">
    <span class="ingredient-label">@IngredientName</span>
    <div class="ingredient-body">
        <label>Quantity: @IngredientQuantity @IngredientUnit</label>
        <input placeholder="Amount to add" @bind="NewIngredientQuantity" />
        <button @onclick="@updateIngredientQuantity">Update</button>
        <button @onclick="@deleteIngredient">Delete from Pantry</button>
    </div>
</div>

@code {

    [Parameter]
    public string IngredientName { get; set; }

    [Parameter]
    public int IngredientQuantity { get; set; }

    [Parameter]
    public int? IngredientId { get; set; }

    [Parameter]
    public AppUnit IngredientUnit { get; set; }

    private string NewIngredientQuantity { get; set; }
    private UserService service { get; set; } = new UserService(new UserDao(), new PantryDao());

    /**
     * Handles deletion of the Ingredient from the database
     */
    private async void deleteIngredient()
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this ingredient entirely from your pantry?");
        if (confirmed)
        {
            Console.WriteLine("Deleting " + this.IngredientName + " # " + this.IngredientId + " for user: " + currentUser.CurrentUser.Username);
            this.service.RemovePantryItem(this.IngredientId ?? -1);
            Nav.NavigateTo("/pantry", true);
        }
    }

    /**
     * Updates the quantity of the Ingredient to the amount
     * specified by the user.
     */
    private async void updateIngredientQuantity()
    {
        int newAmt;
        if (!int.TryParse(this.NewIngredientQuantity, out newAmt))
        {
            var result = await JsRuntime.InvokeAsync<object>("alert", "Please enter a valid number for the new quantity of " + this.IngredientName + ".");
            this.NewIngredientQuantity = "";
            StateHasChanged();
            return;
        }

        Console.WriteLine("Updating " + this.IngredientName + " # " + this.IngredientId + " quantity to "
            + this.NewIngredientQuantity + " for user: " + currentUser.CurrentUser.Username);
        this.service.UpdatePantryItem(new PantryItem()
            {
                PantryId = this.IngredientId,
                UserId = currentUser.CurrentUser.Id,
                IngredientName = this.IngredientName,
                Quantity = Int32.Parse(this.NewIngredientQuantity),
                UnitId = this.IngredientUnit
            });
        Nav.NavigateTo("/pantry", true);
    }
}
