@using RecipePlannerApi.Model;
@using RecipePlannerWebApp.LocalServices;
@inject NavigationManager Nav;
@inject UserSessionData currentUserData;

<div class="widget">
    <h4 style="font-style:italic">@this.DayOfWeek.ToString()</h4>
    <div class="meals">
        <div id="plan">
            <label>Breakfast</label>
            @if (this.breakfast?.Recipe is not null)
            {
                <img src="./Assets/recipe-filler-image.png" width="75px" height="75px" @onclick="() => goToRecipe(this.breakfast.Recipe.Title, this.breakfast.Recipe.ApiId ?? 0)" />
            }
            else
            {
                <img src="./Assets/add-new-item.jpg" width="75px" height="75px" @onclick="addBreakfast" />
            }
        </div>
        <div id="plan">
            <label>Lunch</label>
            @if (this.lunch?.Recipe is not null)
            {
                <img src="./Assets/recipe-filler-image.png" width="75px" height="75px" @onclick="() => goToRecipe(this.lunch.Recipe.Title, this.lunch.Recipe.ApiId ?? 0)" />
            }
            else
            {
                <img src="./Assets/add-new-item.jpg" width="75px" height="75px" @onclick="addLunch" />
            }
        </div>
        <div id="plan">
            <label>Dinner</label>
            @if (this.dinner?.Recipe is not null)
            {
                <img src="./Assets/recipe-filler-image.png" width="75px" height="75px" @onclick="() => goToRecipe(this.dinner.Recipe.Title, this.dinner.Recipe.ApiId ?? 0)" />
            }
            else
            {
                <img src="./Assets/add-new-item.jpg" width="75px" height="75px" @onclick="addDinner" />
            }
        </div>

    </div>
</div>

@code {
    [Parameter]
    public DayOfWeek DayOfWeek { get; set; }

    [Parameter]
    public MealPlan? MealPlan { get; set; }

    private List<Meal> meals { get; set; } = new List<Meal>();

    private Meal breakfast { get; set; }
    private Meal lunch { get; set; }
    private Meal dinner { get; set; }

    /**
     * Initializes the Planner component
     */
    protected override void OnInitialized()
    {
        Console.WriteLine("MEAL WIDGET -- INITIALIZING");
        this.meals = this.MealPlan.meals[this.DayOfWeek];
        Console.WriteLine("Meals: " + this.meals.Count);
        this.currentUserData.SelectedMeal = null;
        this.breakfast = new Meal() { MealPlanId = this.MealPlan.MealPlanId ?? 0, Date = (DateTime)this.MealPlan.MealPlanDate, DayOfWeek = this.DayOfWeek, MealType = MealType.BREAKFAST };
        this.lunch = new Meal() { MealPlanId = this.MealPlan.MealPlanId ?? 0, Date = (DateTime)this.MealPlan.MealPlanDate, DayOfWeek = this.DayOfWeek, MealType = MealType.LUNCH };
        this.dinner = new Meal() { MealPlanId = this.MealPlan.MealPlanId ?? 0, Date = (DateTime)this.MealPlan.MealPlanDate, DayOfWeek = this.DayOfWeek, MealType = MealType.DINNER };
        foreach (var meal in this.meals)
        {
            if (meal.MealType == MealType.BREAKFAST)
            {
                this.breakfast = meal;
            }
            else if (meal.MealType == MealType.LUNCH)
            {
                this.lunch = meal;
            }
            else if (meal.MealType == MealType.DINNER)
            {
                this.dinner = meal;
            }
        }
    }

    private void addBreakfast()
    {
        Console.WriteLine("Clicked add breakfast for " + this.DayOfWeek + ". Clicked by " + currentUserData.CurrentUser.Username);
        this.currentUserData.SelectedMeal = this.breakfast;
        this.currentUserData.NewMeal = true;
        Nav.NavigateTo("/explore");
    }

    private void addLunch()
    {
        Console.WriteLine("Clicked add lunch for " + this.DayOfWeek + ". Clicked by " + currentUserData.CurrentUser.Username);
        this.currentUserData.SelectedMeal = this.lunch;
        this.currentUserData.NewMeal = true;
        Nav.NavigateTo("/explore");
    }

    private void addDinner()
    {
        Console.WriteLine("Clicked add dinner for " + this.DayOfWeek + ". Clicked by " + currentUserData.CurrentUser.Username);
        this.currentUserData.SelectedMeal = this.dinner;
        this.currentUserData.NewMeal = true;
        Nav.NavigateTo("/explore");
    }

    /**
     *  Handles page navigation to the specified recipe detail view
     *  @param recipeTitle - the title of the recipe
     *  @param recipeId - the recipe id
     */
    private void goToRecipe(string recipeTitle, int recipeId)
    {
        Console.WriteLine("Recipe clicked: " + recipeId);
        Nav.NavigateTo("recipe-details/" + recipeTitle + "/" + recipeId);
    }
}